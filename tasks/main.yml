---

- name: Create a directory if it does not exist
  file:
    path: "{{ traefik.config_path | default('/opt/docker_volumes/traefik') }}"
    state: directory
    mode: 0755
  tags:
    - traefik

- name: Render traefik.toml
  template:
    src: "traefik.toml.j2"
    dest: "{{ traefik.config_path | default('/opt/docker_volumes/traefik') }}/traefik.toml"
  notify:
    - restart traefik
  tags:
    - traefik

- name: Create acme.json
  file:
    path: "{{ traefik.config_path | default('/opt/docker_volumes/traefik') }}/acme.json"
    mode: 0600
    state: touch
  tags:
    - traefik

- name: Deploy container
  docker_container:
    name: traefik
    image: traefik:v2.1
    state: started
    restart_policy: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "{{ traefik.config_path | default('/opt/docker_volumes/traefik') }}/traefik.toml:/etc/traefik/traefik.toml"
      - "{{ traefik.config_path | default('/opt/docker_volumes/traefik') }}/acme.json:/acme.json"
    networks:
      - name: "{{ traefik.docker.network | default('bridge') }}"
    labels:
      traefik.http.routers.http_catchall.rule: "HostRegexp(`{any:.+}`)"
      traefik.http.routers.http_catchall.entrypoints: "web"
      traefik.http.routers.http_catchall.middlewares: "https_redirect"
      traefik.http.middlewares.https_redirect.redirectscheme.scheme: "https"
      traefik.http.middlewares.https_redirect.redirectscheme.permanent: "true"
  tags:
    - traefik
